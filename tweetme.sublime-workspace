{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"for",
				"forms"
			],
			[
				"T",
				"TweetModelForm"
			],
			[
				"re",
				"request"
			],
			[
				"temp",
				"template_name"
			],
			[
				"va",
				"validate_content"
			],
			[
				"V",
				"validationError"
			],
			[
				"TweetM",
				"TweetModelAdmin"
			],
			[
				"get",
				"get_object_or_404"
			],
			[
				"Twe",
				"TweetListView"
			],
			[
				"h",
				"html\thtml"
			],
			[
				"ur",
				"urlpatterns"
			],
			[
				"mode",
				"models"
			],
			[
				"m",
				"max_length"
			],
			[
				"B",
				"B"
			],
			[
				"in",
				"include"
			],
			[
				"A",
				"Any"
			],
			[
				"FI",
				"Field"
			],
			[
				"json",
				"json_encode"
			],
			[
				"mysql_num",
				"mysql_num_rows"
			],
			[
				"ba",
				"background-color"
			],
			[
				"sc",
				"scroll"
			],
			[
				"doc",
				"documentElem"
			],
			[
				"tr",
				"translate3d()"
			],
			[
				"text",
				"text-align"
			],
			[
				"li",
				"li\tTag"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#NB: The `urlpatterns` list routes URLs to views \n#import views \n#from .views import tweet_detailed_view,tweet_list_view  --> these are for function based views \nfrom .views import (\n\tTweetCreateView,\n\tTweetDetailView,\n\t TweetListView\n\t )\n\n\nfrom django.conf.urls import url\n\nurlpatterns = [\n    \n    #**************for the function based views **\n    #url(r'^$', tweet_list_view, name= \"list\"),\n    #url(r'^1/$', tweet_detailed_view, name= \"detail\"),\n\n    #using class based views \n\turl(r'^$', TweetListView.as_view(), name= \"list\"),  # $ shows the endof the URL , hence here /tweet/\n\turl(r'^create/$', TweetCreateView.as_view(), name= \"create\"), #/tweet/create/\n    url(r'^(?P<pk>\\d+)/$',TweetDetailView.as_view() , name= \"detail\"),  # /tweet/1/ \n\n]\n\n\t\t\n\n",
			"file": "src/tweets/urls.py",
			"file_size": 781,
			"file_write_time": 131472773471238004,
			"settings":
			{
				"buffer_size": 756,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/tweets/views.py",
			"settings":
			{
				"buffer_size": 3592,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from django import forms\nfrom django.forms.utils import ErrorList\n\n\n\nclass FormUserNeededMixin(object):\n\tdef form_valid(self, form):\n\t\tif self.request.user.is_authenticated(): # dont allow submit if user is not authenticated.\n\t\t\tform.instance.user = self.request.user\n\t\t\treturn super(FormUserNeededMixin, self).form_valid(form)\n\t\telse:\n\t\t\tform._errors[forms.forms.NON_FIELD_ERRORS] = ErrorList([\"User must be logged in to continue\"]) # confirm login status of the user \n\t\t\treturn self.form_invalid(form)\n\n",
			"file": "src/tweets/mixins.py",
			"file_size": 515,
			"file_write_time": 131474505724419906,
			"settings":
			{
				"buffer_size": 505,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "mixins.py"
			}
		},
		{
			"contents": "<form class='form' method='POST' action=\"\">\n{% csrf_token %}\n\t{{ form.as_p}}\n\t<input type=\"submit\" value=\"Tweet\"/>\n</form>  ",
			"file": "src/tweets/templates/tweets/create_view.html",
			"file_size": 126,
			"file_write_time": 131472782850123765,
			"settings":
			{
				"buffer_size": 124,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/tweets/forms.py",
			"settings":
			{
				"buffer_size": 651,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from django.db import models\nfrom django.conf import settings # associating with user model \nfrom django.core.exceptions import ValidationError\n\nfrom .validators import validate_content\n\n\n# Create your models here.\nclass Tweet(models.Model):\n\tuser = models.ForeignKey(settings.AUTH_USER_MODEL, default=1) #id of 1.  Associating with the user.\n\tcontent\t= models.CharField(max_length = 140 , validators=[validate_content]) \n\tupdated = models.DateTimeField(auto_now = True) # Read a little more of the documentation. \n\ttimestamp = models.DateTimeField(auto_now_add = True)  \n\t\t\n\tdef __str__(self):\n\t\treturn str(self.id) \n\n\n\t#===========you can add validation right in the model (inline validation) not specifically for a field though \n\t# def clean(self, *args, **kwargs):\n\t# \tcontent = self.content\n\t# \tif content == \"abc\":\n\t# \t\traise ValidationError(\"Content cannot be ABC\")\n\t# \treturn super(Tweet , self).clean(*args, **kwargs)\n\n\n\n\n ",
			"file": "src/tweets/models.py",
			"file_size": 932,
			"file_write_time": 131467742685061163,
			"settings":
			{
				"buffer_size": 932,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/tweets/validators.py",
			"settings":
			{
				"buffer_size": 313,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/tweets/admin.py",
			"settings":
			{
				"buffer_size": 433,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 35.0,
		"last_filter": "Package Control: list ",
		"selected_items":
		[
			[
				"Package Control: list ",
				"Package Control: List Packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Local Dependency"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets"
	],
	"file_history":
	[
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/admin.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/urls.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/views.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/apps.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/models.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/views.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/tweets/tweet_list.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/tweets/tweet_detail.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/urls.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/tweets/update_view.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/templates/home.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/tweets/detail_view.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/tweets/list_view.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/tweets/delete_confirm.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/tweets/create_view.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/list_view.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweets/templates/detailed_view.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/admin.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/models.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/urls.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/myFirstAPI/settings.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/settings/local.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/apps.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/myFirstAPI/urls.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/views.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/static-storage/static/css/custom.css",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/settings/_init_.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/manage.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/wsgi.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/settings/base.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/settings/production.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/migrations/__init__.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/__init__.py",
		"/C/Users/Wycliffe/Documents/Django_Projects/Dev/tweetme/src/tweetme/settings.py",
		"/C/xampp/htdocs/DANIELS/connect.php",
		"/C/xampp/htdocs/DANIELS/prayerguide.html",
		"/C/Users/Wycliffe/Documents/Django_Projects/myFirstAPI/musique/migrations/urls.py",
		"/C/Users/Wycliffe/AppData/Local/Temp/Rar$DIa0.814/google-services.json",
		"/C/Users/Wycliffe/Documents/Prolog/it.txt",
		"/D/SC 3.1/ICS 2300 ADT and Algorithms/Data Structures -(Students Notes)/SourceCodes/Chapter08 Queues/Node.java",
		"/C/Users/Wycliffe/Documents/Prolog/kenya_counties.pl",
		"/C/xampp/htdocs/DANIELS/addMember.php",
		"/C/xampp/htdocs/DANIELS/login.php",
		"/C/Users/Wycliffe/Downloads/google-services (2).json",
		"/C/Users/Wycliffe/AppData/Local/Temp/Temp1_CS LAB_2 (1).zip/CS LAB_2.md",
		"/C/xampp/htdocs/DANIELS/index.html",
		"/C/xampp/htdocs/DANIELS/Membership.html",
		"/C/xampp/htdocs/DANIELS/gallery.html",
		"/C/xampp/htdocs/DANIELS/events.html",
		"/C/xampp/htdocs/DANIELS/bible study.html",
		"/C/xampp/htdocs/DANIELS/inspiration.html",
		"/C/Users/Wycliffe/Desktop/login.php",
		"/C/xampp/htdocs/DANIELS/shortcuts.html",
		"/C/xampp/htdocs/CodeIgniter/application/controllers/index.html",
		"/C/xampp/htdocs/CodeIgniter/index.php",
		"/C/xampp/htdocs/jkusda.api/application/models/Maine_model.php",
		"/C/Users/Wycliffe/Desktop/test.html",
		"/C/xampp/htdocs/HBC/index.html",
		"/C/xampp/htdocs/HBC/css/HBC.css",
		"/C/xampp/htdocs/HBC/JBWKZ_MGM_ComingSoon.png"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			".\n",
			"true"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/tweets/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 756,
						"regions":
						{
						},
						"selection":
						[
							[
								754,
								754
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/tweets/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3592,
						"regions":
						{
						},
						"selection":
						[
							[
								746,
								746
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/tweets/mixins.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 505,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"auto_name": "mixins.py",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/tweets/templates/tweets/create_view.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 124,
						"regions":
						{
						},
						"selection":
						[
							[
								124,
								124
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/tweets/forms.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 651,
						"regions":
						{
						},
						"selection":
						[
							[
								244,
								244
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/tweets/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 932,
						"regions":
						{
						},
						"selection":
						[
							[
								617,
								617
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/tweets/validators.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 313,
						"regions":
						{
						},
						"selection":
						[
							[
								136,
								136
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/tweets/admin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 433,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "tweetme.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 209.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
